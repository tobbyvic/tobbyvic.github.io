(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{396:function(n,e,t){"use strict";t.r(e);var s=t(54),i=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("GitHub Pages 搭建\n#为什么使用 GitHub Pages\n如果你把他作为一个轻量级的个人博客服务，GitHub Pages 相较 WordPress 之类的建站服务有什么优势呢？")]),n._v(" "),t("p",[n._v("首先他是完全免费的，相较其他的同类产品，他能替你省下一笔服务费，节约下的钱可以让你买一些其他的会员服务；\n无须自己购买云服务进行搭建，只需按步骤一步步操作即可，即使你不懂他的技术细节；\n支持的功能多，玩法丰富，你可以绑定你的域名、使用免费的 HTTPS、自己 DIY 网站的主题、使用他人开发好的插件等等；\n当完成搭建后，你只需要专注于文章创作就可以了，其他诸如环境搭建、系统维护、文件存储的事情一概不用操心，都由 GitHub 处理\n当然了，作为一款免费的服务，我们也是要遵守 GitHub 官方使用建议和限制，在使用的时候项目和网站的大小不要超过 1GB，也不要过于频繁的更新网站的内容（每小时不超过 10 个版本），每个月的也要注意带宽使用上限为 100GB。")]),n._v(" "),t("p",[n._v("综合来看，GitHub Pages 依旧可以说是中小型博客或项目主页的最佳选项之一。")]),n._v(" "),t("p",[n._v("#如何使用 GitHub pages\n创建仓库\n首先你需要注册一个 GitHub 账号，并在个人主界面里选择创建一个新的 Repository 。")]),n._v(" "),t("p",[n._v("img")]),n._v(" "),t("p",[n._v("进入页面后，在 Repository name 的位置填写域名，格式是 username.GitHub.io。")]),n._v(" "),t("p",[n._v("使用官方模板主题\n创建成功之后，点击右上角的 Settings")]),n._v(" "),t("p",[n._v("img")]),n._v(" "),t("p",[n._v("找到 GitHub Pages 选项，选择一个 GitHub 官方提供的主题")]),n._v(" "),t("p",[n._v("img")]),n._v(" "),t("p",[n._v("这里我们就随意选择一个主题 Cayman，来看看他的效果是什么样的")]),n._v(" "),t("p",[n._v("img")]),n._v(" "),t("p",[n._v("选择完毕之后 GitHub Pages 就会自动帮你生成好网站，在他跳转的界面点击 Commit changes 按钮，网站就可以访问了。")]),n._v(" "),t("p",[n._v("img")]),n._v(" "),t("p",[n._v("在浏览器里输入你的项目名称，比如 brick713.GitHub.io，就可以看到，你刚刚选择的主题的个人网站的页面了。")]),n._v(" "),t("p",[n._v("img")]),n._v(" "),t("p",[n._v("到这里如果你只是想做一个例如可以随时在互联网上访问的简历，那么你只需要 GitHub Pages 项目的主页修改你 index.md 文件就可以了，比如我给出的这个模板。")]),n._v(" "),t("p",[n._v("img")]),n._v(" "),t("p",[n._v("修改完后，点击上图中左下角的 Commit Changes，然后访问你的自定义域名你就可以看到如下的样式了。")]),n._v(" "),t("p",[n._v("img")]),n._v(" "),t("p",[n._v("此时我们已经完成了在github的仓库配置。接下来我们要用静态博客生成框架vuepress来生成并丰富我们的博客网站。")]),n._v(" "),t("p",[n._v("#vuepress安装\n安装程序 node.js 或者 Yarn。VuePress支持使用Yarn和npm来安装，Node.js版本需要>=8才可以。")]),n._v(" "),t("p",[n._v("此处选择熟悉的工具即可，博主这里用的是npm咯。")]),n._v(" "),t("p",[n._v("打开cmd，在控制台输入以下代码：")]),n._v(" "),t("p",[n._v("全局安装VuePress")]),n._v(" "),t("p",[n._v("yarn global add vuepress # 或者：npm install -g vuepress")]),n._v(" "),t("h2",{attrs:{id:"或者也可以在已存在的项目中开发-将-vuepress-作为一个本地依赖安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#或者也可以在已存在的项目中开发-将-vuepress-作为一个本地依赖安装"}},[n._v("#")]),n._v(" 或者也可以在已存在的项目中开发，将 VuePress 作为一个本地依赖安装，")]),n._v(" "),t("h2",{attrs:{id:"上下两条选择一个即可-博主选择上者-省点折腾。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#上下两条选择一个即可-博主选择上者-省点折腾。"}},[n._v("#")]),n._v(" 上下两条选择一个即可，博主选择上者，省点折腾。")]),n._v(" "),t("h2",{attrs:{id:"yarn-add-d-vuepress-或者-npm-install-d-vuepress"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yarn-add-d-vuepress-或者-npm-install-d-vuepress"}},[n._v("#")]),n._v(" yarn add -D vuepress # 或者：npm install -D vuepress")]),n._v(" "),t("p",[n._v("创建新项目目录")]),n._v(" "),t("p",[n._v("mkdir project\ncd project\n初始化项目")]),n._v(" "),t("p",[n._v("yarn init -y # 或者 npm init -y\n接着，在 package.json 里加一些脚本:")]),n._v(" "),t("p",[n._v('{\n"scripts": {\n"docs:dev": "vuepress dev docs",\n"docs:build": "vuepress build docs"\n/* docs:dev 键值可以自定义修改，此处是为了和一些项目中默认脚本中自带的 dev 区分开。\n如果修改了这个doc:dev 为 mydev，那么下面执行vuepress dev docs的命令就变成了npm run mydev\nnpm run mydev 等于在该项目的根目录下执行vuepress dev doc\nvuepress dev doc 做的就是调用安装的vuepress去根据你目录中的.vuepress配置项和docs下的所有.md/。html文件做一个项目的编译和打包\ndocs:build 同理 */\n}\n}\n然后就可以开始写作了:')]),n._v(" "),t("p",[n._v("yarn docs:dev # 或者：npm run docs:dev\n要生成静态的 HTML 文件，运行：")]),n._v(" "),t("p",[n._v("yarn docs:build # 或者：npm run docs:build\n默认情况下，文件将会被生成在 .vuepress/dist，当然，你也可以通过 .vuepress/config.js中的 dest 字段来修改，生成的文件可以部署到任意的静态文件服务器上.")]),n._v(" "),t("p",[n._v("不习惯命令行输入的也可以直接依靠windows可视化操作建立如下工程目录。")]),n._v(" "),t("p",[n._v("project\n├─── docs\n│   ├── README.md\n└── package.json\n在README.md中输入一些内容，在package.json中注入脚本命令。并将命令挂载到webstorm的命令配置处。 然后点击运行run dev ，run build 来自动生成.vuepress文件夹 图片描述")]),n._v(" "),t("p",[n._v("project\n├─── docs\n│   ├── README.md\n│   └── .vuepress\n│       ├── dist\n│       ├── public\n│       └── config.js\n└── package.json\n不管使用哪种方式，最终的项目结构应该和上面一样。")]),n._v(" "),t("p",[n._v("docs文件夹是你的根目录，也是vuepress要去解析的文件夹，\ndocs下的README.md可以理解为首页页面。\ndocs下的.vuepress是一些配置文件，这里可以存放图片等静态资源，一些主题配置，自定义组件等等\n至此，一个基于docs文件夹下的README.md文件 生成的页面 就 制作完成了。👏")]),n._v(" "),t("p",[n._v("#Config.js配置\nmodule.exports = {\ntitle: 'Wiki 1001', // 页签标题 : A001_VuePress博客搭建的简单教程&问题分析 # | Wiki 1001\ndescription: '金志相的 Wiki 1001 维基百科', // meta 中的描述文字，意义不大，SEO用\n// 注入到当前页面的 HTML ")]),t("head",[n._v(" 中的标签\nhead: [\n// 增加一个自定义的 favicon(网页标签的图标)\n// 这里的 '/' 指向 docs/.vuepress/public 文件目录\n// 即 docs/.vuepress/public/img/geass-bg.ico\n['link', { rel: 'icon', href: '/img/geass-bg.ico' }],\n],\nbase: '/Wiki1001Pro/', // 这是部署到github相关的配置\nmarkdown: {\nlineNumbers: true // 代码块显示行号\n},\n}\nconfig.js中继续配置主题参数 顶部导航栏"),t("p"),n._v(" "),t("p",[n._v("module.exports = {\n...\nthemeConfig: {\nsidebarDepth: 4, // e'b将同时提取markdown中h2 和 h3 标题，显示在侧边栏上。\nlastUpdated: 'Last Updated' ,// 文档更新时间：每个文件git最后提交的时间,\n// 顶部导航栏\nnav:[\n// 单项 text：显示文字，link：指向链接\n// 这里的'/' 指的是 docs文件夹路径\n// [以 '/' 结尾的默认指向该路径下README.md文件]\n{ text: '求索', link: '/FAQ/' },  // http://localhost:8080/Wiki1001Pro/FAQ/\n{ text: '仓库', link: '/Store/' },\n{ text: '随笔', link: '/Thought/' },\n// 多项，下拉形式\n{\ntext: 'Concat',\nitems: [\n// link：指向链接也可以是外网链接\n{ text: 'Segmentfault', link: 'https://segmentfault.com/u/mulander' },\n]\n},\n{\ntext: 'GitHub',\nitems: [\n{ text: 'GitHub首页', link: 'https://github.com/Mulander-J' },\n{ text: 'Island', link: 'https://mulander-j.github.io/island/code/html/index.html' },\n{ text: 'TimeWaster', link: 'https://mulander-j.github.io/timeWaster/demo/index.html#/' },\n]\n},\n],\n}\n}\nconfig.js中继续配置主题参数 侧边栏")]),n._v(" "),t("p",[n._v("module.exports = {\n...\nthemeConfig: {\n...\n// 侧边栏菜单( 一个模块对应一个菜单形式 )\nsidebar:{\n// 打开FAQ主页链接时生成下面这个菜单\n'/FAQ/':[\n//多级菜单形式\n{\n// 菜单名\ntitle: '消化堆',\n// 子菜单\nchildren: [\n// ['','']=>[路径,标题]\n// 或者写成 '路径',标题自动识别为该地址的文件中的h1标题\n// 不以 '/' 结尾的就是指向.md文件"),t("br"),n._v("\n['/FAQ/DigestionHeap/Digested','消化过'], // '/FAQ/DigestionHeap/Digested.md'文件\n['/FAQ/DigestionHeap/Digesting','消化中'],\n['/FAQ/DigestionHeap/DigestWill','待消化']\n]\n},\n{\ntitle: '输出层',\nchildren: [\n['/FAQ/Console/A001','#A001_VuePress'],\n['/FAQ/Console/A002','#A002_插件清单']\n]\n},\n['/FAQ/','百科首页'],\n['/FAQ/Pool/SkillStack','技术栈'],\n['/FAQ/Pool/Review','归去来']\n],\n// 打开Thought主页链接时生成下面这个菜单\n'/Thought/':[\n['/Thought/','随笔首页'],\n{\ntitle: '游记',\nchildren: [\n['/Thought/Travels/beiPing','北平游记'],\n]\n},\n{\ntitle: '年终回顾',\nchildren: [\n['/Thought/YearReview/2018','2018年'],\n['/Thought/YearReview/2019','2019年']\n]\n},\n],\n// 打开Store主页链接时生成下面这个菜单\n'/Store/': [\n['','仓库首页'],\n{\ntitle: '应用',\nchildren: [\n['/Store/Apps/DownDoors', '下载门户'],\n['/Store/Apps/OwnTest', '博主测评']\n]\n},\n{\ntitle: '电影',\nchildren: [\n['/Store/Films/','收藏级电影']\n]\n},\n{\ntitle: '动画',\nchildren: [\n['/Store/Anime/','收藏级动画']\n]\n},\n]\n},\n}\n注意事项")]),n._v(" "),t("p",[n._v("和图标/图片等静态资源相关的 其 '/' 默认指向的是 docs/.vuepress/public/\n和侧边栏/导航栏相关的地址配置 其 '/' 默认指向的是 docs/\n侧边栏/导航栏指向.md文件的需要先建立相关.md文件，不然会报404或者页面空白\n#目录结构\n本博客的工程目录结构-版本以编辑时间为准，")]),n._v(" "),t("p",[n._v("可配合上文 config.js 关联配置")]),n._v(" "),t("p",[n._v("Dev\n├─── docs\n│   └── .vuepress   // 配置目录\n│   │    ├── public // 静态资源\n│   │    ├──── img\n│   │    ├────── geass-bg.ico // 图标\n│   │    ├────── logo.jpg // 首页logo\n│   │    └── config.js\n│   ├── FAQ // 求索模块\n│   │    ├── Console    // 一级目录 输出层\n│   │    │      ├── img    // 博文引用 的 相关图片\n│   │    │      │   ├── A001    // A001博文的图片库\n│   │    │      │   └──── 001.jpg"),t("br"),n._v("\n│   │    │      ├── A001.md    // 输出层\n│   │    │      └── A002.md    // 输出层\n│   │    ├── DigestionHeap // 一级目录 消化堆\n│   │    │      ├── Digested.md    // 二级目录 消化过\n│   │    │      ├── Digesting.md    // 二级目录 消化中\n│   │    │      └── DigestWill.md    // 二级目录 待消化\n│   │    ├── Pool // 静态池\n│   │    │      ├── SkillStack.md    // 技术栈\n│   │    │      └── Review.md    // 归去来\n│   │    └── README.md  // 求索首页\n│   ├── Store\n│   │    ├── Anime    // 一级目录 动漫\n│   │    │      └── README.md\n│   │    ├── Apps // 一级目录 应用\n│   │    │      ├── DownDoors.md    //  下载门户\n│   │    │      └── OwnTest.md    //  博主测评\n│   │    ├── Films // 一级目录 电影\n│   │    │      └── README.md\n│   │    └── README.md  // 仓库首页\n│   ├── Thought\n│   │    ├── Travels    // 一级目录 游记\n│   │    │      └── beiPing.md"),t("br"),n._v("\n│   │    ├── YearReview // 一级目录 年终回顾\n│   │    │      ├── img    // 博文引用 的 相关图片\n│   │    │      │   ├── 2018    // 2018博文的图片库\n│   │    │      │   ├──── 001.jpg"),t("br"),n._v("\n│   │    │      │   ├─——─ 002.jpg"),t("br"),n._v("\n│   │    │      │   └──── 003.jpg"),t("br"),n._v("\n│   │    │      ├── 2018.md"),t("br"),n._v("\n│   │    │      └── 2019.md"),t("br"),n._v("\n│   │    └── README.md  // 随笔首页\n│   └── README.md   // 博客首页\n└── package.json\n#博客首页")]),n._v(" "),t("hr"),n._v(" "),t("p",[n._v("home: true\nheroImage: /img/logo.jpg\nheroText: Wiki 1001\ntagline: Meet 1000 Books & Unit Them Into 1 Wiki\nactionText: Get Wiki →\nactionLink: /FAQ/\nfeatures:")]),n._v(" "),t("ul",[t("li",[n._v("title: Wiki - 求索\ndetails: 基于书签对知识点进行 整理，吸收，吐纳，归档。吾将上下而求索...")]),n._v(" "),t("li",[n._v("title: Store - 仓库\ndetails: 展望云仓库而归纳整理，方便行事&培养习惯。鱼和熊掌我全都要...")]),n._v(" "),t("li",[n._v("title: Thought - 随笔\ndetails: 活着，是一件最能带来满足感的事。细细琢磨吧，人生啊，有意思的很...\nfooter: MIT Licensed | Copyright © 2019.01.11-present Mulander-J")])]),n._v(" "),t("hr"),n._v(" "),t("p",[n._v("图片描述")]),n._v(" "),t("p",[n._v("#部署博客\n使用指令脚本的形式进行自动化部署。")]),n._v(" "),t("p",[n._v("首先，在根目录下创建文件deploy.sh")]),n._v(" "),t("p",[n._v("#!/usr/bin/env sh")]),n._v(" "),t("h1",{attrs:{id:"确保脚本抛出遇到的错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#确保脚本抛出遇到的错误"}},[n._v("#")]),n._v(" 确保脚本抛出遇到的错误")]),n._v(" "),t("p",[n._v("set -e")]),n._v(" "),t("h1",{attrs:{id:"生成静态文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成静态文件"}},[n._v("#")]),n._v(" 生成静态文件")]),n._v(" "),t("p",[n._v("npm run docs:build")]),n._v(" "),t("h1",{attrs:{id:"进入生成的文件夹"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进入生成的文件夹"}},[n._v("#")]),n._v(" 进入生成的文件夹")]),n._v(" "),t("p",[n._v("cd docs/.vuepress/dist")]),n._v(" "),t("h1",{attrs:{id:"如果是发布到自定义域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果是发布到自定义域名"}},[n._v("#")]),n._v(" 如果是发布到自定义域名")]),n._v(" "),t("h1",{attrs:{id:"echo-www-example-com-cname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#echo-www-example-com-cname"}},[n._v("#")]),n._v(" echo 'www.example.com' > CNAME")]),n._v(" "),t("p",[n._v("git init\ngit add -A\ngit commit -m 'deploy'")]),n._v(" "),t("h1",{attrs:{id:"如果发布到-https-github-io"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果发布到-https-github-io"}},[n._v("#")]),n._v(" 如果发布到 https://"),t("USERNAME",[n._v(".github.io")])],1),n._v(" "),t("p",[n._v("git push -f git@github.com:tobbyvic/tobbyvic.github.io.git master:main")]),n._v(" "),t("h1",{attrs:{id:"如果发布到-https-github-io-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果发布到-https-github-io-2"}},[n._v("#")]),n._v(" 如果发布到 https://"),t("USERNAME",[n._v(".github.io/"),t("REPO")],1)],1),n._v(" "),t("h1",{attrs:{id:"git-push-f-git-github-com-git-master-gh-pages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-push-f-git-github-com-git-master-gh-pages"}},[n._v("#")]),n._v(" git push -f git@github.com:"),t("USERNAME",[n._v("/"),t("REPO",[n._v(".git master:gh-pages")])],1)],1),n._v(" "),t("p",[n._v("然后每次更新完执行脚本即可。")]),n._v(" "),t("p",[n._v("#参考文章\nVuePress博客搭载笔记")]),n._v(" "),t("p",[n._v("GitHub Pages 搭建教程")]),n._v(" "),t("p",[n._v("注: 本文仅学习交流，如有侵权请速与作者联系。")])])])}),[],!1,null,null,null);e.default=i.exports}}]);