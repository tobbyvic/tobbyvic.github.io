(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{401:function(t,e,s){"use strict";s.r(e);var o=s(54),r=Object(o.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("vuex总结及模块化使用\n#在main.js中引入。\nimport store from './store/index'\nnew Vue({...store...})\n#模块化定义")]),t._v(" "),s("p",[t._v("index.js")]),t._v(" "),s("p",[t._v("app.js, user.js")]),t._v(" "),s("p",[t._v("`getter.js")]),t._v(" "),s("p",[t._v("其中，不同modules的state是独立的，在组件中访问时只能通过this.$store.state.modulename."),s("em",[t._v("而getters、mutation、action都是共同的，可直接通过this.$store.getters.")]),t._v(" 或者 this.$store.commit(‘*’)来获取或执行 。")]),t._v(" "),s("p",[t._v("#应用命名空间使getters、mutation、action也相互独立。\n例如form.js")]),t._v(" "),s("p",[t._v("如果希望你的模块具有更高的封装度和复用性，你可以通过添加 namespaced: true 的方式使其成为带命名空间的模块。当模块被注册后，它的所有 getter、action 及 mutation 都会自动根据模块注册的路径调整命名。")]),t._v(" "),s("p",[t._v("在组件中访问该module的getters -> this.$store.getters[‘form/*’]")]),t._v(" "),s("p",[t._v("在组件中访问该module的mutation-> this.$store.commit[‘form/*’]")]),t._v(" "),s("p",[t._v("在组件中访问该module的action->this.$store.dispatch[‘form/*’]")])])}),[],!1,null,null,null);e.default=r.exports}}]);